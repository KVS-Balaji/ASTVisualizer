Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    COLON
    COMMA
    EXCLAMATION
    FALSE
    FLOAT
    NONE
    NOT
    OR
    PRINT
    STRING
    THEN
    TRUE

Grammar

Rule 0     S' -> program
Rule 1     program -> statements
Rule 2     statement -> IDENTIFIER ASSIGN expression
Rule 3     statement -> expression
Rule 4     term -> NUMBER
Rule 5     term -> IDENTIFIER
Rule 6     statements -> statement
Rule 7     statements -> statements statement
Rule 8     statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN block
Rule 9     statement -> WHILE LPAREN expression RPAREN block
Rule 10    statement -> IF LPAREN expression RPAREN block ELSE block
Rule 11    statement -> IF LPAREN expression RPAREN block
Rule 12    block -> INDENT statements DEDENT
Rule 13    expression -> expression EQ expression
Rule 14    expression -> expression NE expression
Rule 15    expression -> expression LT expression
Rule 16    expression -> expression GT expression
Rule 17    expression -> expression LE expression
Rule 18    expression -> expression GE expression
Rule 19    expression -> expression TIMES term
Rule 20    expression -> expression DIVIDE term
Rule 21    expression -> expression PLUS term
Rule 22    expression -> expression MINUS term
Rule 23    expression -> term

Terminals, with rules where they appear

AND                  : 
ASSIGN               : 2
COLON                : 
COMMA                : 
DEDENT               : 12
DIVIDE               : 20
ELSE                 : 10
EQ                   : 13
EXCLAMATION          : 
FALSE                : 
FLOAT                : 
FOR                  : 8
GE                   : 18
GT                   : 16
IDENTIFIER           : 2 5
IF                   : 10 11
INDENT               : 12
LE                   : 17
LPAREN               : 8 9 10 11
LT                   : 15
MINUS                : 22
NE                   : 14
NONE                 : 
NOT                  : 
NUMBER               : 4
OR                   : 
PLUS                 : 21
PRINT                : 
RPAREN               : 8 9 10 11
SEMICOLON            : 8 8
STRING               : 
THEN                 : 
TIMES                : 19
TRUE                 : 
WHILE                : 9
error                : 

Nonterminals, with rules where they appear

block                : 8 9 10 10 11
expression           : 2 3 8 8 8 9 10 11 13 13 14 14 15 15 16 16 17 17 18 18 19 20 21 22
program              : 0
statement            : 6 7
statements           : 1 7 12
term                 : 19 20 21 22 23

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements
    (6) statements -> . statement
    (7) statements -> . statements statement
    (2) statement -> . IDENTIFIER ASSIGN expression
    (3) statement -> . expression
    (8) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN block
    (9) statement -> . WHILE LPAREN expression RPAREN block
    (10) statement -> . IF LPAREN expression RPAREN block ELSE block
    (11) statement -> . IF LPAREN expression RPAREN block
    (13) expression -> . expression EQ expression
    (14) expression -> . expression NE expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LE expression
    (18) expression -> . expression GE expression
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . term
    (4) term -> . NUMBER
    (5) term -> . IDENTIFIER

    IDENTIFIER      shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8
    NUMBER          shift and go to state 10

    program                        shift and go to state 1
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    expression                     shift and go to state 5
    term                           shift and go to state 9

state 1

    (0) S' -> program .



state 2

    (1) program -> statements .
    (7) statements -> statements . statement
    (2) statement -> . IDENTIFIER ASSIGN expression
    (3) statement -> . expression
    (8) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN block
    (9) statement -> . WHILE LPAREN expression RPAREN block
    (10) statement -> . IF LPAREN expression RPAREN block ELSE block
    (11) statement -> . IF LPAREN expression RPAREN block
    (13) expression -> . expression EQ expression
    (14) expression -> . expression NE expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LE expression
    (18) expression -> . expression GE expression
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . term
    (4) term -> . NUMBER
    (5) term -> . IDENTIFIER

    $end            reduce using rule 1 (program -> statements .)
    IDENTIFIER      shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8
    NUMBER          shift and go to state 10

    statement                      shift and go to state 11
    expression                     shift and go to state 5
    term                           shift and go to state 9

state 3

    (6) statements -> statement .

    IDENTIFIER      reduce using rule 6 (statements -> statement .)
    FOR             reduce using rule 6 (statements -> statement .)
    WHILE           reduce using rule 6 (statements -> statement .)
    IF              reduce using rule 6 (statements -> statement .)
    NUMBER          reduce using rule 6 (statements -> statement .)
    $end            reduce using rule 6 (statements -> statement .)
    DEDENT          reduce using rule 6 (statements -> statement .)


state 4

    (2) statement -> IDENTIFIER . ASSIGN expression
    (5) term -> IDENTIFIER .

    ASSIGN          shift and go to state 12
    EQ              reduce using rule 5 (term -> IDENTIFIER .)
    NE              reduce using rule 5 (term -> IDENTIFIER .)
    LT              reduce using rule 5 (term -> IDENTIFIER .)
    GT              reduce using rule 5 (term -> IDENTIFIER .)
    LE              reduce using rule 5 (term -> IDENTIFIER .)
    GE              reduce using rule 5 (term -> IDENTIFIER .)
    TIMES           reduce using rule 5 (term -> IDENTIFIER .)
    DIVIDE          reduce using rule 5 (term -> IDENTIFIER .)
    PLUS            reduce using rule 5 (term -> IDENTIFIER .)
    MINUS           reduce using rule 5 (term -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 5 (term -> IDENTIFIER .)
    FOR             reduce using rule 5 (term -> IDENTIFIER .)
    WHILE           reduce using rule 5 (term -> IDENTIFIER .)
    IF              reduce using rule 5 (term -> IDENTIFIER .)
    NUMBER          reduce using rule 5 (term -> IDENTIFIER .)
    $end            reduce using rule 5 (term -> IDENTIFIER .)
    DEDENT          reduce using rule 5 (term -> IDENTIFIER .)


state 5

    (3) statement -> expression .
    (13) expression -> expression . EQ expression
    (14) expression -> expression . NE expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LE expression
    (18) expression -> expression . GE expression
    (19) expression -> expression . TIMES term
    (20) expression -> expression . DIVIDE term
    (21) expression -> expression . PLUS term
    (22) expression -> expression . MINUS term

    IDENTIFIER      reduce using rule 3 (statement -> expression .)
    FOR             reduce using rule 3 (statement -> expression .)
    WHILE           reduce using rule 3 (statement -> expression .)
    IF              reduce using rule 3 (statement -> expression .)
    NUMBER          reduce using rule 3 (statement -> expression .)
    $end            reduce using rule 3 (statement -> expression .)
    DEDENT          reduce using rule 3 (statement -> expression .)
    EQ              shift and go to state 13
    NE              shift and go to state 14
    LT              shift and go to state 15
    GT              shift and go to state 16
    LE              shift and go to state 17
    GE              shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22


state 6

    (8) statement -> FOR . LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN block

    LPAREN          shift and go to state 23


state 7

    (9) statement -> WHILE . LPAREN expression RPAREN block

    LPAREN          shift and go to state 24


state 8

    (10) statement -> IF . LPAREN expression RPAREN block ELSE block
    (11) statement -> IF . LPAREN expression RPAREN block

    LPAREN          shift and go to state 25


state 9

    (23) expression -> term .

    EQ              reduce using rule 23 (expression -> term .)
    NE              reduce using rule 23 (expression -> term .)
    LT              reduce using rule 23 (expression -> term .)
    GT              reduce using rule 23 (expression -> term .)
    LE              reduce using rule 23 (expression -> term .)
    GE              reduce using rule 23 (expression -> term .)
    TIMES           reduce using rule 23 (expression -> term .)
    DIVIDE          reduce using rule 23 (expression -> term .)
    PLUS            reduce using rule 23 (expression -> term .)
    MINUS           reduce using rule 23 (expression -> term .)
    IDENTIFIER      reduce using rule 23 (expression -> term .)
    FOR             reduce using rule 23 (expression -> term .)
    WHILE           reduce using rule 23 (expression -> term .)
    IF              reduce using rule 23 (expression -> term .)
    NUMBER          reduce using rule 23 (expression -> term .)
    $end            reduce using rule 23 (expression -> term .)
    DEDENT          reduce using rule 23 (expression -> term .)
    SEMICOLON       reduce using rule 23 (expression -> term .)
    RPAREN          reduce using rule 23 (expression -> term .)


state 10

    (4) term -> NUMBER .

    EQ              reduce using rule 4 (term -> NUMBER .)
    NE              reduce using rule 4 (term -> NUMBER .)
    LT              reduce using rule 4 (term -> NUMBER .)
    GT              reduce using rule 4 (term -> NUMBER .)
    LE              reduce using rule 4 (term -> NUMBER .)
    GE              reduce using rule 4 (term -> NUMBER .)
    TIMES           reduce using rule 4 (term -> NUMBER .)
    DIVIDE          reduce using rule 4 (term -> NUMBER .)
    PLUS            reduce using rule 4 (term -> NUMBER .)
    MINUS           reduce using rule 4 (term -> NUMBER .)
    IDENTIFIER      reduce using rule 4 (term -> NUMBER .)
    FOR             reduce using rule 4 (term -> NUMBER .)
    WHILE           reduce using rule 4 (term -> NUMBER .)
    IF              reduce using rule 4 (term -> NUMBER .)
    NUMBER          reduce using rule 4 (term -> NUMBER .)
    $end            reduce using rule 4 (term -> NUMBER .)
    DEDENT          reduce using rule 4 (term -> NUMBER .)
    SEMICOLON       reduce using rule 4 (term -> NUMBER .)
    RPAREN          reduce using rule 4 (term -> NUMBER .)


state 11

    (7) statements -> statements statement .

    IDENTIFIER      reduce using rule 7 (statements -> statements statement .)
    FOR             reduce using rule 7 (statements -> statements statement .)
    WHILE           reduce using rule 7 (statements -> statements statement .)
    IF              reduce using rule 7 (statements -> statements statement .)
    NUMBER          reduce using rule 7 (statements -> statements statement .)
    $end            reduce using rule 7 (statements -> statements statement .)
    DEDENT          reduce using rule 7 (statements -> statements statement .)


state 12

    (2) statement -> IDENTIFIER ASSIGN . expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression NE expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LE expression
    (18) expression -> . expression GE expression
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . term
    (4) term -> . NUMBER
    (5) term -> . IDENTIFIER

    NUMBER          shift and go to state 10
    IDENTIFIER      shift and go to state 26

    expression                     shift and go to state 27
    term                           shift and go to state 9

state 13

    (13) expression -> expression EQ . expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression NE expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LE expression
    (18) expression -> . expression GE expression
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . term
    (4) term -> . NUMBER
    (5) term -> . IDENTIFIER

    NUMBER          shift and go to state 10
    IDENTIFIER      shift and go to state 26

    expression                     shift and go to state 28
    term                           shift and go to state 9

state 14

    (14) expression -> expression NE . expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression NE expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LE expression
    (18) expression -> . expression GE expression
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . term
    (4) term -> . NUMBER
    (5) term -> . IDENTIFIER

    NUMBER          shift and go to state 10
    IDENTIFIER      shift and go to state 26

    expression                     shift and go to state 29
    term                           shift and go to state 9

state 15

    (15) expression -> expression LT . expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression NE expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LE expression
    (18) expression -> . expression GE expression
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . term
    (4) term -> . NUMBER
    (5) term -> . IDENTIFIER

    NUMBER          shift and go to state 10
    IDENTIFIER      shift and go to state 26

    expression                     shift and go to state 30
    term                           shift and go to state 9

state 16

    (16) expression -> expression GT . expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression NE expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LE expression
    (18) expression -> . expression GE expression
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . term
    (4) term -> . NUMBER
    (5) term -> . IDENTIFIER

    NUMBER          shift and go to state 10
    IDENTIFIER      shift and go to state 26

    expression                     shift and go to state 31
    term                           shift and go to state 9

state 17

    (17) expression -> expression LE . expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression NE expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LE expression
    (18) expression -> . expression GE expression
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . term
    (4) term -> . NUMBER
    (5) term -> . IDENTIFIER

    NUMBER          shift and go to state 10
    IDENTIFIER      shift and go to state 26

    expression                     shift and go to state 32
    term                           shift and go to state 9

state 18

    (18) expression -> expression GE . expression
    (13) expression -> . expression EQ expression
    (14) expression -> . expression NE expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LE expression
    (18) expression -> . expression GE expression
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . term
    (4) term -> . NUMBER
    (5) term -> . IDENTIFIER

    NUMBER          shift and go to state 10
    IDENTIFIER      shift and go to state 26

    expression                     shift and go to state 33
    term                           shift and go to state 9

state 19

    (19) expression -> expression TIMES . term
    (4) term -> . NUMBER
    (5) term -> . IDENTIFIER

    NUMBER          shift and go to state 10
    IDENTIFIER      shift and go to state 26

    term                           shift and go to state 34

state 20

    (20) expression -> expression DIVIDE . term
    (4) term -> . NUMBER
    (5) term -> . IDENTIFIER

    NUMBER          shift and go to state 10
    IDENTIFIER      shift and go to state 26

    term                           shift and go to state 35

state 21

    (21) expression -> expression PLUS . term
    (4) term -> . NUMBER
    (5) term -> . IDENTIFIER

    NUMBER          shift and go to state 10
    IDENTIFIER      shift and go to state 26

    term                           shift and go to state 36

state 22

    (22) expression -> expression MINUS . term
    (4) term -> . NUMBER
    (5) term -> . IDENTIFIER

    NUMBER          shift and go to state 10
    IDENTIFIER      shift and go to state 26

    term                           shift and go to state 37

state 23

    (8) statement -> FOR LPAREN . expression SEMICOLON expression SEMICOLON expression RPAREN block
    (13) expression -> . expression EQ expression
    (14) expression -> . expression NE expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LE expression
    (18) expression -> . expression GE expression
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . term
    (4) term -> . NUMBER
    (5) term -> . IDENTIFIER

    NUMBER          shift and go to state 10
    IDENTIFIER      shift and go to state 26

    expression                     shift and go to state 38
    term                           shift and go to state 9

state 24

    (9) statement -> WHILE LPAREN . expression RPAREN block
    (13) expression -> . expression EQ expression
    (14) expression -> . expression NE expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LE expression
    (18) expression -> . expression GE expression
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . term
    (4) term -> . NUMBER
    (5) term -> . IDENTIFIER

    NUMBER          shift and go to state 10
    IDENTIFIER      shift and go to state 26

    expression                     shift and go to state 39
    term                           shift and go to state 9

state 25

    (10) statement -> IF LPAREN . expression RPAREN block ELSE block
    (11) statement -> IF LPAREN . expression RPAREN block
    (13) expression -> . expression EQ expression
    (14) expression -> . expression NE expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LE expression
    (18) expression -> . expression GE expression
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . term
    (4) term -> . NUMBER
    (5) term -> . IDENTIFIER

    NUMBER          shift and go to state 10
    IDENTIFIER      shift and go to state 26

    expression                     shift and go to state 40
    term                           shift and go to state 9

state 26

    (5) term -> IDENTIFIER .

    EQ              reduce using rule 5 (term -> IDENTIFIER .)
    NE              reduce using rule 5 (term -> IDENTIFIER .)
    LT              reduce using rule 5 (term -> IDENTIFIER .)
    GT              reduce using rule 5 (term -> IDENTIFIER .)
    LE              reduce using rule 5 (term -> IDENTIFIER .)
    GE              reduce using rule 5 (term -> IDENTIFIER .)
    TIMES           reduce using rule 5 (term -> IDENTIFIER .)
    DIVIDE          reduce using rule 5 (term -> IDENTIFIER .)
    PLUS            reduce using rule 5 (term -> IDENTIFIER .)
    MINUS           reduce using rule 5 (term -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 5 (term -> IDENTIFIER .)
    FOR             reduce using rule 5 (term -> IDENTIFIER .)
    WHILE           reduce using rule 5 (term -> IDENTIFIER .)
    IF              reduce using rule 5 (term -> IDENTIFIER .)
    NUMBER          reduce using rule 5 (term -> IDENTIFIER .)
    $end            reduce using rule 5 (term -> IDENTIFIER .)
    DEDENT          reduce using rule 5 (term -> IDENTIFIER .)
    SEMICOLON       reduce using rule 5 (term -> IDENTIFIER .)
    RPAREN          reduce using rule 5 (term -> IDENTIFIER .)


state 27

    (2) statement -> IDENTIFIER ASSIGN expression .
    (13) expression -> expression . EQ expression
    (14) expression -> expression . NE expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LE expression
    (18) expression -> expression . GE expression
    (19) expression -> expression . TIMES term
    (20) expression -> expression . DIVIDE term
    (21) expression -> expression . PLUS term
    (22) expression -> expression . MINUS term

    IDENTIFIER      reduce using rule 2 (statement -> IDENTIFIER ASSIGN expression .)
    FOR             reduce using rule 2 (statement -> IDENTIFIER ASSIGN expression .)
    WHILE           reduce using rule 2 (statement -> IDENTIFIER ASSIGN expression .)
    IF              reduce using rule 2 (statement -> IDENTIFIER ASSIGN expression .)
    NUMBER          reduce using rule 2 (statement -> IDENTIFIER ASSIGN expression .)
    $end            reduce using rule 2 (statement -> IDENTIFIER ASSIGN expression .)
    DEDENT          reduce using rule 2 (statement -> IDENTIFIER ASSIGN expression .)
    EQ              shift and go to state 13
    NE              shift and go to state 14
    LT              shift and go to state 15
    GT              shift and go to state 16
    LE              shift and go to state 17
    GE              shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22


state 28

    (13) expression -> expression EQ expression .
    (13) expression -> expression . EQ expression
    (14) expression -> expression . NE expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LE expression
    (18) expression -> expression . GE expression
    (19) expression -> expression . TIMES term
    (20) expression -> expression . DIVIDE term
    (21) expression -> expression . PLUS term
    (22) expression -> expression . MINUS term

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    IDENTIFIER      reduce using rule 13 (expression -> expression EQ expression .)
    FOR             reduce using rule 13 (expression -> expression EQ expression .)
    WHILE           reduce using rule 13 (expression -> expression EQ expression .)
    IF              reduce using rule 13 (expression -> expression EQ expression .)
    NUMBER          reduce using rule 13 (expression -> expression EQ expression .)
    $end            reduce using rule 13 (expression -> expression EQ expression .)
    DEDENT          reduce using rule 13 (expression -> expression EQ expression .)
    SEMICOLON       reduce using rule 13 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 13 (expression -> expression EQ expression .)
    EQ              shift and go to state 13
    NE              shift and go to state 14
    LT              shift and go to state 15
    GT              shift and go to state 16
    LE              shift and go to state 17
    GE              shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22

  ! EQ              [ reduce using rule 13 (expression -> expression EQ expression .) ]
  ! NE              [ reduce using rule 13 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 13 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 13 (expression -> expression EQ expression .) ]
  ! LE              [ reduce using rule 13 (expression -> expression EQ expression .) ]
  ! GE              [ reduce using rule 13 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 13 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 13 (expression -> expression EQ expression .) ]
  ! PLUS            [ reduce using rule 13 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 13 (expression -> expression EQ expression .) ]


state 29

    (14) expression -> expression NE expression .
    (13) expression -> expression . EQ expression
    (14) expression -> expression . NE expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LE expression
    (18) expression -> expression . GE expression
    (19) expression -> expression . TIMES term
    (20) expression -> expression . DIVIDE term
    (21) expression -> expression . PLUS term
    (22) expression -> expression . MINUS term

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    IDENTIFIER      reduce using rule 14 (expression -> expression NE expression .)
    FOR             reduce using rule 14 (expression -> expression NE expression .)
    WHILE           reduce using rule 14 (expression -> expression NE expression .)
    IF              reduce using rule 14 (expression -> expression NE expression .)
    NUMBER          reduce using rule 14 (expression -> expression NE expression .)
    $end            reduce using rule 14 (expression -> expression NE expression .)
    DEDENT          reduce using rule 14 (expression -> expression NE expression .)
    SEMICOLON       reduce using rule 14 (expression -> expression NE expression .)
    RPAREN          reduce using rule 14 (expression -> expression NE expression .)
    EQ              shift and go to state 13
    NE              shift and go to state 14
    LT              shift and go to state 15
    GT              shift and go to state 16
    LE              shift and go to state 17
    GE              shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22

  ! EQ              [ reduce using rule 14 (expression -> expression NE expression .) ]
  ! NE              [ reduce using rule 14 (expression -> expression NE expression .) ]
  ! LT              [ reduce using rule 14 (expression -> expression NE expression .) ]
  ! GT              [ reduce using rule 14 (expression -> expression NE expression .) ]
  ! LE              [ reduce using rule 14 (expression -> expression NE expression .) ]
  ! GE              [ reduce using rule 14 (expression -> expression NE expression .) ]
  ! TIMES           [ reduce using rule 14 (expression -> expression NE expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression NE expression .) ]
  ! PLUS            [ reduce using rule 14 (expression -> expression NE expression .) ]
  ! MINUS           [ reduce using rule 14 (expression -> expression NE expression .) ]


state 30

    (15) expression -> expression LT expression .
    (13) expression -> expression . EQ expression
    (14) expression -> expression . NE expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LE expression
    (18) expression -> expression . GE expression
    (19) expression -> expression . TIMES term
    (20) expression -> expression . DIVIDE term
    (21) expression -> expression . PLUS term
    (22) expression -> expression . MINUS term

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    IDENTIFIER      reduce using rule 15 (expression -> expression LT expression .)
    FOR             reduce using rule 15 (expression -> expression LT expression .)
    WHILE           reduce using rule 15 (expression -> expression LT expression .)
    IF              reduce using rule 15 (expression -> expression LT expression .)
    NUMBER          reduce using rule 15 (expression -> expression LT expression .)
    $end            reduce using rule 15 (expression -> expression LT expression .)
    DEDENT          reduce using rule 15 (expression -> expression LT expression .)
    SEMICOLON       reduce using rule 15 (expression -> expression LT expression .)
    RPAREN          reduce using rule 15 (expression -> expression LT expression .)
    EQ              shift and go to state 13
    NE              shift and go to state 14
    LT              shift and go to state 15
    GT              shift and go to state 16
    LE              shift and go to state 17
    GE              shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22

  ! EQ              [ reduce using rule 15 (expression -> expression LT expression .) ]
  ! NE              [ reduce using rule 15 (expression -> expression LT expression .) ]
  ! LT              [ reduce using rule 15 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 15 (expression -> expression LT expression .) ]
  ! LE              [ reduce using rule 15 (expression -> expression LT expression .) ]
  ! GE              [ reduce using rule 15 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 15 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression LT expression .) ]
  ! PLUS            [ reduce using rule 15 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 15 (expression -> expression LT expression .) ]


state 31

    (16) expression -> expression GT expression .
    (13) expression -> expression . EQ expression
    (14) expression -> expression . NE expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LE expression
    (18) expression -> expression . GE expression
    (19) expression -> expression . TIMES term
    (20) expression -> expression . DIVIDE term
    (21) expression -> expression . PLUS term
    (22) expression -> expression . MINUS term

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    IDENTIFIER      reduce using rule 16 (expression -> expression GT expression .)
    FOR             reduce using rule 16 (expression -> expression GT expression .)
    WHILE           reduce using rule 16 (expression -> expression GT expression .)
    IF              reduce using rule 16 (expression -> expression GT expression .)
    NUMBER          reduce using rule 16 (expression -> expression GT expression .)
    $end            reduce using rule 16 (expression -> expression GT expression .)
    DEDENT          reduce using rule 16 (expression -> expression GT expression .)
    SEMICOLON       reduce using rule 16 (expression -> expression GT expression .)
    RPAREN          reduce using rule 16 (expression -> expression GT expression .)
    EQ              shift and go to state 13
    NE              shift and go to state 14
    LT              shift and go to state 15
    GT              shift and go to state 16
    LE              shift and go to state 17
    GE              shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22

  ! EQ              [ reduce using rule 16 (expression -> expression GT expression .) ]
  ! NE              [ reduce using rule 16 (expression -> expression GT expression .) ]
  ! LT              [ reduce using rule 16 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 16 (expression -> expression GT expression .) ]
  ! LE              [ reduce using rule 16 (expression -> expression GT expression .) ]
  ! GE              [ reduce using rule 16 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 16 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression GT expression .) ]
  ! PLUS            [ reduce using rule 16 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 16 (expression -> expression GT expression .) ]


state 32

    (17) expression -> expression LE expression .
    (13) expression -> expression . EQ expression
    (14) expression -> expression . NE expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LE expression
    (18) expression -> expression . GE expression
    (19) expression -> expression . TIMES term
    (20) expression -> expression . DIVIDE term
    (21) expression -> expression . PLUS term
    (22) expression -> expression . MINUS term

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    IDENTIFIER      reduce using rule 17 (expression -> expression LE expression .)
    FOR             reduce using rule 17 (expression -> expression LE expression .)
    WHILE           reduce using rule 17 (expression -> expression LE expression .)
    IF              reduce using rule 17 (expression -> expression LE expression .)
    NUMBER          reduce using rule 17 (expression -> expression LE expression .)
    $end            reduce using rule 17 (expression -> expression LE expression .)
    DEDENT          reduce using rule 17 (expression -> expression LE expression .)
    SEMICOLON       reduce using rule 17 (expression -> expression LE expression .)
    RPAREN          reduce using rule 17 (expression -> expression LE expression .)
    EQ              shift and go to state 13
    NE              shift and go to state 14
    LT              shift and go to state 15
    GT              shift and go to state 16
    LE              shift and go to state 17
    GE              shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22

  ! EQ              [ reduce using rule 17 (expression -> expression LE expression .) ]
  ! NE              [ reduce using rule 17 (expression -> expression LE expression .) ]
  ! LT              [ reduce using rule 17 (expression -> expression LE expression .) ]
  ! GT              [ reduce using rule 17 (expression -> expression LE expression .) ]
  ! LE              [ reduce using rule 17 (expression -> expression LE expression .) ]
  ! GE              [ reduce using rule 17 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 17 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression LE expression .) ]
  ! PLUS            [ reduce using rule 17 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> expression LE expression .) ]


state 33

    (18) expression -> expression GE expression .
    (13) expression -> expression . EQ expression
    (14) expression -> expression . NE expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LE expression
    (18) expression -> expression . GE expression
    (19) expression -> expression . TIMES term
    (20) expression -> expression . DIVIDE term
    (21) expression -> expression . PLUS term
    (22) expression -> expression . MINUS term

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    IDENTIFIER      reduce using rule 18 (expression -> expression GE expression .)
    FOR             reduce using rule 18 (expression -> expression GE expression .)
    WHILE           reduce using rule 18 (expression -> expression GE expression .)
    IF              reduce using rule 18 (expression -> expression GE expression .)
    NUMBER          reduce using rule 18 (expression -> expression GE expression .)
    $end            reduce using rule 18 (expression -> expression GE expression .)
    DEDENT          reduce using rule 18 (expression -> expression GE expression .)
    SEMICOLON       reduce using rule 18 (expression -> expression GE expression .)
    RPAREN          reduce using rule 18 (expression -> expression GE expression .)
    EQ              shift and go to state 13
    NE              shift and go to state 14
    LT              shift and go to state 15
    GT              shift and go to state 16
    LE              shift and go to state 17
    GE              shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22

  ! EQ              [ reduce using rule 18 (expression -> expression GE expression .) ]
  ! NE              [ reduce using rule 18 (expression -> expression GE expression .) ]
  ! LT              [ reduce using rule 18 (expression -> expression GE expression .) ]
  ! GT              [ reduce using rule 18 (expression -> expression GE expression .) ]
  ! LE              [ reduce using rule 18 (expression -> expression GE expression .) ]
  ! GE              [ reduce using rule 18 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 18 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression GE expression .) ]
  ! PLUS            [ reduce using rule 18 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 18 (expression -> expression GE expression .) ]


state 34

    (19) expression -> expression TIMES term .

    EQ              reduce using rule 19 (expression -> expression TIMES term .)
    NE              reduce using rule 19 (expression -> expression TIMES term .)
    LT              reduce using rule 19 (expression -> expression TIMES term .)
    GT              reduce using rule 19 (expression -> expression TIMES term .)
    LE              reduce using rule 19 (expression -> expression TIMES term .)
    GE              reduce using rule 19 (expression -> expression TIMES term .)
    TIMES           reduce using rule 19 (expression -> expression TIMES term .)
    DIVIDE          reduce using rule 19 (expression -> expression TIMES term .)
    PLUS            reduce using rule 19 (expression -> expression TIMES term .)
    MINUS           reduce using rule 19 (expression -> expression TIMES term .)
    IDENTIFIER      reduce using rule 19 (expression -> expression TIMES term .)
    FOR             reduce using rule 19 (expression -> expression TIMES term .)
    WHILE           reduce using rule 19 (expression -> expression TIMES term .)
    IF              reduce using rule 19 (expression -> expression TIMES term .)
    NUMBER          reduce using rule 19 (expression -> expression TIMES term .)
    $end            reduce using rule 19 (expression -> expression TIMES term .)
    DEDENT          reduce using rule 19 (expression -> expression TIMES term .)
    SEMICOLON       reduce using rule 19 (expression -> expression TIMES term .)
    RPAREN          reduce using rule 19 (expression -> expression TIMES term .)


state 35

    (20) expression -> expression DIVIDE term .

    EQ              reduce using rule 20 (expression -> expression DIVIDE term .)
    NE              reduce using rule 20 (expression -> expression DIVIDE term .)
    LT              reduce using rule 20 (expression -> expression DIVIDE term .)
    GT              reduce using rule 20 (expression -> expression DIVIDE term .)
    LE              reduce using rule 20 (expression -> expression DIVIDE term .)
    GE              reduce using rule 20 (expression -> expression DIVIDE term .)
    TIMES           reduce using rule 20 (expression -> expression DIVIDE term .)
    DIVIDE          reduce using rule 20 (expression -> expression DIVIDE term .)
    PLUS            reduce using rule 20 (expression -> expression DIVIDE term .)
    MINUS           reduce using rule 20 (expression -> expression DIVIDE term .)
    IDENTIFIER      reduce using rule 20 (expression -> expression DIVIDE term .)
    FOR             reduce using rule 20 (expression -> expression DIVIDE term .)
    WHILE           reduce using rule 20 (expression -> expression DIVIDE term .)
    IF              reduce using rule 20 (expression -> expression DIVIDE term .)
    NUMBER          reduce using rule 20 (expression -> expression DIVIDE term .)
    $end            reduce using rule 20 (expression -> expression DIVIDE term .)
    DEDENT          reduce using rule 20 (expression -> expression DIVIDE term .)
    SEMICOLON       reduce using rule 20 (expression -> expression DIVIDE term .)
    RPAREN          reduce using rule 20 (expression -> expression DIVIDE term .)


state 36

    (21) expression -> expression PLUS term .

    EQ              reduce using rule 21 (expression -> expression PLUS term .)
    NE              reduce using rule 21 (expression -> expression PLUS term .)
    LT              reduce using rule 21 (expression -> expression PLUS term .)
    GT              reduce using rule 21 (expression -> expression PLUS term .)
    LE              reduce using rule 21 (expression -> expression PLUS term .)
    GE              reduce using rule 21 (expression -> expression PLUS term .)
    TIMES           reduce using rule 21 (expression -> expression PLUS term .)
    DIVIDE          reduce using rule 21 (expression -> expression PLUS term .)
    PLUS            reduce using rule 21 (expression -> expression PLUS term .)
    MINUS           reduce using rule 21 (expression -> expression PLUS term .)
    IDENTIFIER      reduce using rule 21 (expression -> expression PLUS term .)
    FOR             reduce using rule 21 (expression -> expression PLUS term .)
    WHILE           reduce using rule 21 (expression -> expression PLUS term .)
    IF              reduce using rule 21 (expression -> expression PLUS term .)
    NUMBER          reduce using rule 21 (expression -> expression PLUS term .)
    $end            reduce using rule 21 (expression -> expression PLUS term .)
    DEDENT          reduce using rule 21 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 21 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 21 (expression -> expression PLUS term .)


state 37

    (22) expression -> expression MINUS term .

    EQ              reduce using rule 22 (expression -> expression MINUS term .)
    NE              reduce using rule 22 (expression -> expression MINUS term .)
    LT              reduce using rule 22 (expression -> expression MINUS term .)
    GT              reduce using rule 22 (expression -> expression MINUS term .)
    LE              reduce using rule 22 (expression -> expression MINUS term .)
    GE              reduce using rule 22 (expression -> expression MINUS term .)
    TIMES           reduce using rule 22 (expression -> expression MINUS term .)
    DIVIDE          reduce using rule 22 (expression -> expression MINUS term .)
    PLUS            reduce using rule 22 (expression -> expression MINUS term .)
    MINUS           reduce using rule 22 (expression -> expression MINUS term .)
    IDENTIFIER      reduce using rule 22 (expression -> expression MINUS term .)
    FOR             reduce using rule 22 (expression -> expression MINUS term .)
    WHILE           reduce using rule 22 (expression -> expression MINUS term .)
    IF              reduce using rule 22 (expression -> expression MINUS term .)
    NUMBER          reduce using rule 22 (expression -> expression MINUS term .)
    $end            reduce using rule 22 (expression -> expression MINUS term .)
    DEDENT          reduce using rule 22 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 22 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 22 (expression -> expression MINUS term .)


state 38

    (8) statement -> FOR LPAREN expression . SEMICOLON expression SEMICOLON expression RPAREN block
    (13) expression -> expression . EQ expression
    (14) expression -> expression . NE expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LE expression
    (18) expression -> expression . GE expression
    (19) expression -> expression . TIMES term
    (20) expression -> expression . DIVIDE term
    (21) expression -> expression . PLUS term
    (22) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 41
    EQ              shift and go to state 13
    NE              shift and go to state 14
    LT              shift and go to state 15
    GT              shift and go to state 16
    LE              shift and go to state 17
    GE              shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22


state 39

    (9) statement -> WHILE LPAREN expression . RPAREN block
    (13) expression -> expression . EQ expression
    (14) expression -> expression . NE expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LE expression
    (18) expression -> expression . GE expression
    (19) expression -> expression . TIMES term
    (20) expression -> expression . DIVIDE term
    (21) expression -> expression . PLUS term
    (22) expression -> expression . MINUS term

    RPAREN          shift and go to state 42
    EQ              shift and go to state 13
    NE              shift and go to state 14
    LT              shift and go to state 15
    GT              shift and go to state 16
    LE              shift and go to state 17
    GE              shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22


state 40

    (10) statement -> IF LPAREN expression . RPAREN block ELSE block
    (11) statement -> IF LPAREN expression . RPAREN block
    (13) expression -> expression . EQ expression
    (14) expression -> expression . NE expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LE expression
    (18) expression -> expression . GE expression
    (19) expression -> expression . TIMES term
    (20) expression -> expression . DIVIDE term
    (21) expression -> expression . PLUS term
    (22) expression -> expression . MINUS term

    RPAREN          shift and go to state 43
    EQ              shift and go to state 13
    NE              shift and go to state 14
    LT              shift and go to state 15
    GT              shift and go to state 16
    LE              shift and go to state 17
    GE              shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22


state 41

    (8) statement -> FOR LPAREN expression SEMICOLON . expression SEMICOLON expression RPAREN block
    (13) expression -> . expression EQ expression
    (14) expression -> . expression NE expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LE expression
    (18) expression -> . expression GE expression
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . term
    (4) term -> . NUMBER
    (5) term -> . IDENTIFIER

    NUMBER          shift and go to state 10
    IDENTIFIER      shift and go to state 26

    expression                     shift and go to state 44
    term                           shift and go to state 9

state 42

    (9) statement -> WHILE LPAREN expression RPAREN . block
    (12) block -> . INDENT statements DEDENT

    INDENT          shift and go to state 46

    block                          shift and go to state 45

state 43

    (10) statement -> IF LPAREN expression RPAREN . block ELSE block
    (11) statement -> IF LPAREN expression RPAREN . block
    (12) block -> . INDENT statements DEDENT

    INDENT          shift and go to state 46

    block                          shift and go to state 47

state 44

    (8) statement -> FOR LPAREN expression SEMICOLON expression . SEMICOLON expression RPAREN block
    (13) expression -> expression . EQ expression
    (14) expression -> expression . NE expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LE expression
    (18) expression -> expression . GE expression
    (19) expression -> expression . TIMES term
    (20) expression -> expression . DIVIDE term
    (21) expression -> expression . PLUS term
    (22) expression -> expression . MINUS term

    SEMICOLON       shift and go to state 48
    EQ              shift and go to state 13
    NE              shift and go to state 14
    LT              shift and go to state 15
    GT              shift and go to state 16
    LE              shift and go to state 17
    GE              shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22


state 45

    (9) statement -> WHILE LPAREN expression RPAREN block .

    IDENTIFIER      reduce using rule 9 (statement -> WHILE LPAREN expression RPAREN block .)
    FOR             reduce using rule 9 (statement -> WHILE LPAREN expression RPAREN block .)
    WHILE           reduce using rule 9 (statement -> WHILE LPAREN expression RPAREN block .)
    IF              reduce using rule 9 (statement -> WHILE LPAREN expression RPAREN block .)
    NUMBER          reduce using rule 9 (statement -> WHILE LPAREN expression RPAREN block .)
    $end            reduce using rule 9 (statement -> WHILE LPAREN expression RPAREN block .)
    DEDENT          reduce using rule 9 (statement -> WHILE LPAREN expression RPAREN block .)


state 46

    (12) block -> INDENT . statements DEDENT
    (6) statements -> . statement
    (7) statements -> . statements statement
    (2) statement -> . IDENTIFIER ASSIGN expression
    (3) statement -> . expression
    (8) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN block
    (9) statement -> . WHILE LPAREN expression RPAREN block
    (10) statement -> . IF LPAREN expression RPAREN block ELSE block
    (11) statement -> . IF LPAREN expression RPAREN block
    (13) expression -> . expression EQ expression
    (14) expression -> . expression NE expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LE expression
    (18) expression -> . expression GE expression
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . term
    (4) term -> . NUMBER
    (5) term -> . IDENTIFIER

    IDENTIFIER      shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8
    NUMBER          shift and go to state 10

    statements                     shift and go to state 49
    statement                      shift and go to state 3
    expression                     shift and go to state 5
    term                           shift and go to state 9

state 47

    (10) statement -> IF LPAREN expression RPAREN block . ELSE block
    (11) statement -> IF LPAREN expression RPAREN block .

    ELSE            shift and go to state 50
    IDENTIFIER      reduce using rule 11 (statement -> IF LPAREN expression RPAREN block .)
    FOR             reduce using rule 11 (statement -> IF LPAREN expression RPAREN block .)
    WHILE           reduce using rule 11 (statement -> IF LPAREN expression RPAREN block .)
    IF              reduce using rule 11 (statement -> IF LPAREN expression RPAREN block .)
    NUMBER          reduce using rule 11 (statement -> IF LPAREN expression RPAREN block .)
    $end            reduce using rule 11 (statement -> IF LPAREN expression RPAREN block .)
    DEDENT          reduce using rule 11 (statement -> IF LPAREN expression RPAREN block .)


state 48

    (8) statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON . expression RPAREN block
    (13) expression -> . expression EQ expression
    (14) expression -> . expression NE expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LE expression
    (18) expression -> . expression GE expression
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . term
    (4) term -> . NUMBER
    (5) term -> . IDENTIFIER

    NUMBER          shift and go to state 10
    IDENTIFIER      shift and go to state 26

    expression                     shift and go to state 51
    term                           shift and go to state 9

state 49

    (12) block -> INDENT statements . DEDENT
    (7) statements -> statements . statement
    (2) statement -> . IDENTIFIER ASSIGN expression
    (3) statement -> . expression
    (8) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN block
    (9) statement -> . WHILE LPAREN expression RPAREN block
    (10) statement -> . IF LPAREN expression RPAREN block ELSE block
    (11) statement -> . IF LPAREN expression RPAREN block
    (13) expression -> . expression EQ expression
    (14) expression -> . expression NE expression
    (15) expression -> . expression LT expression
    (16) expression -> . expression GT expression
    (17) expression -> . expression LE expression
    (18) expression -> . expression GE expression
    (19) expression -> . expression TIMES term
    (20) expression -> . expression DIVIDE term
    (21) expression -> . expression PLUS term
    (22) expression -> . expression MINUS term
    (23) expression -> . term
    (4) term -> . NUMBER
    (5) term -> . IDENTIFIER

    DEDENT          shift and go to state 52
    IDENTIFIER      shift and go to state 4
    FOR             shift and go to state 6
    WHILE           shift and go to state 7
    IF              shift and go to state 8
    NUMBER          shift and go to state 10

    statement                      shift and go to state 11
    expression                     shift and go to state 5
    term                           shift and go to state 9

state 50

    (10) statement -> IF LPAREN expression RPAREN block ELSE . block
    (12) block -> . INDENT statements DEDENT

    INDENT          shift and go to state 46

    block                          shift and go to state 53

state 51

    (8) statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression . RPAREN block
    (13) expression -> expression . EQ expression
    (14) expression -> expression . NE expression
    (15) expression -> expression . LT expression
    (16) expression -> expression . GT expression
    (17) expression -> expression . LE expression
    (18) expression -> expression . GE expression
    (19) expression -> expression . TIMES term
    (20) expression -> expression . DIVIDE term
    (21) expression -> expression . PLUS term
    (22) expression -> expression . MINUS term

    RPAREN          shift and go to state 54
    EQ              shift and go to state 13
    NE              shift and go to state 14
    LT              shift and go to state 15
    GT              shift and go to state 16
    LE              shift and go to state 17
    GE              shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20
    PLUS            shift and go to state 21
    MINUS           shift and go to state 22


state 52

    (12) block -> INDENT statements DEDENT .

    IDENTIFIER      reduce using rule 12 (block -> INDENT statements DEDENT .)
    FOR             reduce using rule 12 (block -> INDENT statements DEDENT .)
    WHILE           reduce using rule 12 (block -> INDENT statements DEDENT .)
    IF              reduce using rule 12 (block -> INDENT statements DEDENT .)
    NUMBER          reduce using rule 12 (block -> INDENT statements DEDENT .)
    $end            reduce using rule 12 (block -> INDENT statements DEDENT .)
    DEDENT          reduce using rule 12 (block -> INDENT statements DEDENT .)
    ELSE            reduce using rule 12 (block -> INDENT statements DEDENT .)


state 53

    (10) statement -> IF LPAREN expression RPAREN block ELSE block .

    IDENTIFIER      reduce using rule 10 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    FOR             reduce using rule 10 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    WHILE           reduce using rule 10 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    IF              reduce using rule 10 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    NUMBER          reduce using rule 10 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    $end            reduce using rule 10 (statement -> IF LPAREN expression RPAREN block ELSE block .)
    DEDENT          reduce using rule 10 (statement -> IF LPAREN expression RPAREN block ELSE block .)


state 54

    (8) statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN . block
    (12) block -> . INDENT statements DEDENT

    INDENT          shift and go to state 46

    block                          shift and go to state 55

state 55

    (8) statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN block .

    IDENTIFIER      reduce using rule 8 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN block .)
    FOR             reduce using rule 8 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN block .)
    WHILE           reduce using rule 8 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN block .)
    IF              reduce using rule 8 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN block .)
    NUMBER          reduce using rule 8 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN block .)
    $end            reduce using rule 8 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN block .)
    DEDENT          reduce using rule 8 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EQ in state 28 resolved as shift
WARNING: shift/reduce conflict for NE in state 28 resolved as shift
WARNING: shift/reduce conflict for LT in state 28 resolved as shift
WARNING: shift/reduce conflict for GT in state 28 resolved as shift
WARNING: shift/reduce conflict for LE in state 28 resolved as shift
WARNING: shift/reduce conflict for GE in state 28 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 28 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 28 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 28 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 28 resolved as shift
WARNING: shift/reduce conflict for EQ in state 29 resolved as shift
WARNING: shift/reduce conflict for NE in state 29 resolved as shift
WARNING: shift/reduce conflict for LT in state 29 resolved as shift
WARNING: shift/reduce conflict for GT in state 29 resolved as shift
WARNING: shift/reduce conflict for LE in state 29 resolved as shift
WARNING: shift/reduce conflict for GE in state 29 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 29 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 29 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 29 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 29 resolved as shift
WARNING: shift/reduce conflict for EQ in state 30 resolved as shift
WARNING: shift/reduce conflict for NE in state 30 resolved as shift
WARNING: shift/reduce conflict for LT in state 30 resolved as shift
WARNING: shift/reduce conflict for GT in state 30 resolved as shift
WARNING: shift/reduce conflict for LE in state 30 resolved as shift
WARNING: shift/reduce conflict for GE in state 30 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 30 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 30 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 30 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 30 resolved as shift
WARNING: shift/reduce conflict for EQ in state 31 resolved as shift
WARNING: shift/reduce conflict for NE in state 31 resolved as shift
WARNING: shift/reduce conflict for LT in state 31 resolved as shift
WARNING: shift/reduce conflict for GT in state 31 resolved as shift
WARNING: shift/reduce conflict for LE in state 31 resolved as shift
WARNING: shift/reduce conflict for GE in state 31 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 31 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 31 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 31 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 31 resolved as shift
WARNING: shift/reduce conflict for EQ in state 32 resolved as shift
WARNING: shift/reduce conflict for NE in state 32 resolved as shift
WARNING: shift/reduce conflict for LT in state 32 resolved as shift
WARNING: shift/reduce conflict for GT in state 32 resolved as shift
WARNING: shift/reduce conflict for LE in state 32 resolved as shift
WARNING: shift/reduce conflict for GE in state 32 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 32 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 32 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 32 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 32 resolved as shift
WARNING: shift/reduce conflict for EQ in state 33 resolved as shift
WARNING: shift/reduce conflict for NE in state 33 resolved as shift
WARNING: shift/reduce conflict for LT in state 33 resolved as shift
WARNING: shift/reduce conflict for GT in state 33 resolved as shift
WARNING: shift/reduce conflict for LE in state 33 resolved as shift
WARNING: shift/reduce conflict for GE in state 33 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 33 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 33 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 33 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 33 resolved as shift
